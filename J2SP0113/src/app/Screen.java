/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import back.Book;
import back.myService;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author hi
 */
public class Screen extends javax.swing.JFrame {

    /**
     * Creates new form Screen
     */
    myService service = new myService();
    DefaultListModel dlm = new DefaultListModel();
    String currentBookName = "";
    String currentBookCode = "";
    ArrayList nameList = new ArrayList();
    ArrayList codeList = new ArrayList();
    int maxYear = 2020;
    int minYear = 1980;
    boolean addNew = false;
    boolean change = false;
    public Screen() {
        initComponents();
        txtCode.setEditable(false);
        loadNameData();
        loadCodeData();
        loadComboBox();
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        txtPublisher = new javax.swing.JTextField();
        cbYear = new javax.swing.JComboBox<>();
        cbRent = new javax.swing.JCheckBox();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Book List");

        JList.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        JList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JList);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Book Code");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Book Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Author");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Publisher");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Publish Year");

        txtCode.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txtName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txtAuthor.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txtPublisher.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        cbYear.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        cbRent.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cbRent.setText("For Rent");

        btnNew.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnNew.setText("New");
        btnNew.setPreferredSize(new java.awt.Dimension(130, 40));
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnSave.setText("Save");
        btnSave.setPreferredSize(new java.awt.Dimension(130, 40));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setText("Remove");
        jButton3.setPreferredSize(new java.awt.Dimension(130, 40));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnExit.setText("Exit");
        btnExit.setPreferredSize(new java.awt.Dimension(130, 40));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 15, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3))
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName)
                                    .addComponent(txtAuthor)
                                    .addComponent(txtPublisher)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbRent)
                                            .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(85, 85, 85)
                                .addComponent(txtCode))))
                    .addComponent(jLabel1))
                .addGap(108, 108, 108))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbRent)
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JListMouseClicked
        addNew = false;
        change = true;
        txtCode.setEditable(false);
        if(JList.getSelectedValue() != null){
            currentBookName = JList.getSelectedValue();
            int codeNumber = JList.getSelectedIndex();
            currentBookCode = codeList.get(codeNumber).toString();           
            loadBookData(currentBookCode, currentBookName);
        }        
        
    }//GEN-LAST:event_JListMouseClicked

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        addNew = true;
        change = false;
        txtCode.setText("");
        txtCode.setEditable(true);
        txtName.setText("");
        txtAuthor.setText("");
        txtPublisher.setText("");
        cbYear.setSelectedIndex(0);
        cbRent.setSelected(false);        
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
            String bCode = txtCode.getText();
            String bName = txtName.getText();
            String author = txtAuthor.getText();
            String publisher = txtPublisher.getText();
            int vYear = Integer.parseInt(cbYear.getSelectedItem().toString());
            boolean isRent = cbRent.isSelected();
            
            if(validate(bCode, bName, author, author) == false){
                return;
            }
            
        if(addNew){
            try {
                if(service.checkBookExist(bCode) == true){
                    JOptionPane.showMessageDialog(this, "There is already a book with this code");
                    return;
                }else{
                    Book x = new Book(bCode, bName, author, publisher, vYear, isRent);
                    service.insertBook(x);
                    addNew = false;
                    loadBundel();
                }          
                
            } catch (Exception e) {
                e.printStackTrace();
              
            }            
        }else if(change == true){
            try {
                Book x = new Book(bCode, bName, author, publisher, vYear, isRent);
                service.updateBook(x);
                loadBundel();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please click on New or the List");
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
            if(service.checkBookExist(txtCode.getText())){
        if(JOptionPane.showConfirmDialog(this, "Are you sure","Remove",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            try {
                service.removeBook(txtCode.getText());
                txtCode.setText("");
                txtCode.setEditable(false);
                txtName.setText("");
                txtAuthor.setText("");
                txtPublisher.setText("");
                cbYear.setSelectedIndex(0);
                cbRent.setSelected(false);  
                addNew = false;
                change = false;
                loadBundel();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "ERROR DEL");
                e.printStackTrace();
            }
        }
        }else{
            JOptionPane.showMessageDialog(this, "There is nothing to deleted");
        }
        }catch (Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        if(JOptionPane.showConfirmDialog(this, "Are you sure","Remove",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed
    
    public boolean validate(String code, String name, String au, String pub){
        String rex = "[a-zA-Z0-9]{3,10}";
        String rexName = "[a-zA-Z0-9\\s\\-]{2,30}";
        String rexAu = "[a-zA-Z\\s]{2,30}";
        try {
            if(!code.matches(rex) || code.trim().length() == 0){
                JOptionPane.showMessageDialog(this, "Invalid code");
                return false;
            }
            if(!name.matches(rexName) || name.trim().length() == 0){
                JOptionPane.showMessageDialog(this, "Invalid name");
                return false;
            }
            if(!pub.matches(rexName) || pub.trim().length() == 0){
                JOptionPane.showMessageDialog(this, "Invalid publisher");
                return false;
            }     
            if(!au.matches(rexAu) || au.trim().length() == 0){
                JOptionPane.showMessageDialog(this, "Invalid author");
                return false;
            }            
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Input Error");
            return false;
        }
        
        return true;
    }
    
    public void loadComboBox(){
        for(int i = maxYear; i >= minYear;i--){
            cbYear.addItem(Integer.toString(i));
        }
    }
    
    public void loadBookData(String code, String name){
        try {
            Book x = service.getBookData(code, name);
            if(x != null){
                txtCode.setText(x.getCode());
                txtName.setText(x.getName());
                txtAuthor.setText(x.getAuthor());
                txtPublisher.setText(x.getPublisher());
                if(x.isForRent() == true){
                    cbRent.setSelected(true);
                }else{
                    cbRent.setSelected(false);
                }
                cbYear.setSelectedItem(Integer.toString(x.getYear()));
              
            }else{
                JOptionPane.showMessageDialog(this, "ERROR");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void loadCodeData(){
        try {
            if(service.getAllBookName() != null){
                codeList.clear();
                codeList = service.getAllCode();             
            }
        } catch (Exception e) {
            e.printStackTrace();
        }        
    }
    
    public void loadNameData(){
        try {
            if(service.getAllBookName() != null){
                nameList.clear();
                nameList = service.getAllBookName();
                dlm.clear();
                for(int i = 0; i < nameList.size(); i++){
                    dlm.addElement(nameList.get(i).toString());
                }
                JList.setModel(dlm);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void loadBundel(){
        loadNameData();
        loadCodeData();
        loadComboBox();        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JList;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox cbRent;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPublisher;
    // End of variables declaration//GEN-END:variables
}
